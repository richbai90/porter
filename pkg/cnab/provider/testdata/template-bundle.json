{
    "custom": {
        "io.cnab.docker": {
            "mounts": [
                {
                    "ReadOnly": false,
                    "Source": "{{ bundle.parameters.src }}",
                    "Target": "/target",
                    "Type": "bind"
                }
            ],
            "privileged": false
        },
        "io.cnab.parameter-sources": {
            "porter-state": {
                "priority": [
                    "output"
                ],
                "sources": {
                    "output": {
                        "name": "porter-state"
                    }
                }
            }
        },
        "sh.porter": {
            "commit": "cf4a6c8d",
            "manifest": "bmFtZTogcG9ydGVyX3Rlc3QKdmVyc2lvbjogMC4xLjEKc2NoZW1hVmVyc2lvbjogMS4wLjAtYWxwaGEuMQpkZXNjcmlwdGlvbjogIkEgc2ltcGxlIHRlc3QiCnJlZ2lzdHJ5OiBsb2NhbGhvc3Q6NTAxNQpwYXJhbWV0ZXJzOgogIC0gbmFtZTogc3JjCiAgICB0eXBlOiBzdHJpbmcKICAgIHNlbnNpdGl2ZTogZmFsc2UKICAgIGRlZmF1bHQ6ICIvdG1wIgogICAgYXBwbHlUbzoKICAgICAgLSBydW50aW1lCnJlcXVpcmVkOgogIC0gZG9ja2VyOgogICAgICBwcml2aWxlZ2VkOiBmYWxzZQogICAgICBtb3VudHM6CiAgICAgICAgLSBUeXBlOiAiYmluZCIKICAgICAgICAgIFNvdXJjZTogInt7IGJ1bmRsZS5wYXJhbWV0ZXJzLnNyYyB9fSIKICAgICAgICAgIFRhcmdldDogIi90YXJnZXQiCiAgICAgICAgICBSZWFkT25seTogZmFsc2UKbWl4aW5zOgogIC0gZG9ja2VyCiAgLSBleGVjCgppbnN0YWxsOgogIC0gZG9ja2VyOgogICAgICBkZXNjcmlwdGlvbjogIlN1bW1vbiBNaW5pb24iCiAgICAgIHJ1bjoKICAgICAgICBpbWFnZTogIndhaXQ6bGF0ZXN0IgoKCnVuaW5zdGFsbDoKICAtIGV4ZWM6CiAgICAgIGRlc2NyaXB0aW9uOiBSZW1vdmUgdGVzdGluZyBjb250YWluZXIKICAgICAgY29tbWFuZDogZWNobyAidW5pbnN0YWxsZWQiCiAgICAgIAo=",
            "manifestDigest": "f420262b4f9d192f9a2cf56677fce72e9a79d749e310693dcf4140e9a2a4cefe",
            "mixins": {
                "docker": {
                    "version": "v0.2.3-2-g8b08238"
                },
                "exec": {
                    "version": "v1.0.0-alpha.20-70-gcf4a6c8d"
                }
            },
            "version": "v1.0.0-alpha.20-70-gcf4a6c8d"
        },
        "sh.porter.file-parameters": {}
    },
    "definitions": {
        "porter-debug-parameter": {
            "$comment": "porter-internal",
            "$id": "https://porter.sh/generated-bundle/#porter-debug",
            "default": false,
            "description": "Print debug information from Porter when executing the bundle",
            "type": "boolean"
        },
        "porter-state": {
            "$comment": "porter-internal",
            "$id": "https://porter.sh/generated-bundle/#porter-state",
            "contentEncoding": "base64",
            "description": "Supports persisting state for bundles. Porter internal parameter that should not be set manually.",
            "type": "string"
        },
        "src-parameter": {
            "default": "/tmp",
            "type": "string"
        }
    },
    "description": "A simple test",
    "invocationImages": [
        {
            "image": "localhost:5015/porter_test:7e78f7be5730c5025569a95caa751594",
            "imageType": "docker"
        }
    ],
    "name": "porter_test",
    "outputs": {
        "porter-state": {
            "definition": "porter-state",
            "description": "Supports persisting state for bundles. Porter internal parameter that should not be set manually.",
            "path": "/cnab/app/outputs/porter-state"
        }
    },
    "parameters": {
        "porter-debug": {
            "definition": "porter-debug-parameter",
            "description": "Print debug information from Porter when executing the bundle",
            "destination": {
                "env": "PORTER_DEBUG"
            }
        },
        "porter-state": {
            "definition": "porter-state",
            "description": "Supports persisting state for bundles. Porter internal parameter that should not be set manually.",
            "destination": {
                "path": "/porter/state.tgz"
            }
        },
        "src": {
            "applyTo": [
                "runtime"
            ],
            "definition": "src-parameter",
            "destination": {
                "env": "SRC"
            }
        }
    },
    "requiredExtensions": [
        "sh.porter.file-parameters",
        "io.cnab.parameter-sources",
        "io.cnab.docker"
    ],
    "schemaVersion": "v1.0.0",
    "version": "0.1.1"
}